{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthonticationService {\n  constructor(_HttpClien) {\n    this._HttpClien = _HttpClien;\n    this.isLogin = new BehaviorSubject(null);\n    this.userName = \"\";\n    this.socialName = \"\";\n    this.socialLink = \"\";\n    this.socialicon = \"\";\n    let Token = localStorage.getItem('Token');\n    let Data = localStorage.getItem('Data');\n    let Title = localStorage.getItem('Title');\n    let Link = localStorage.getItem('Link');\n    let Icon = localStorage.getItem('Icon');\n    if (Token !== null) {\n      let userData = jwtDecode(Token);\n      console.log(userData);\n      this.socialName = Title;\n      this.userName = Data;\n      this.socialLink = Link;\n      this.socialicon = Icon;\n      console.log(this.socialName);\n    }\n    this.isLogin.next(Title);\n  }\n  logIn(userData) {\n    let httpheaders = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    });\n    return this._HttpClien.post('https://mashro3ylink.com/api/v1/clients/auth/login', userData);\n  }\n  AddLink(clientdata) {\n    let httpheaders = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer${this._AuthonticationService.Token}',\n      'Accept-Language': '{{lang_code}}'\n    });\n    return this._HttpClien.post('https://mashro3ylink.com/api/v1/clients/links', {\n      headers: httpheaders\n    }, clientdata);\n  }\n}\nAuthonticationService.ɵfac = function AuthonticationService_Factory(t) {\n  return new (t || AuthonticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthonticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthonticationService,\n  factory: AuthonticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAAOC,WAAW,QAAO,sBAAsB;AAC/C,OAAOC,SAAS,MAAM,YAAY;;;AAMlC,OAAM,MAAOC,qBAAqB;EAShCC,YAAqBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAR/B,YAAO,GAAG,IAAIL,eAAe,CAAC,IAAI,CAAC;IAGnC,aAAQ,GAAQ,EAAE;IAClB,eAAU,GAAQ,EAAE;IACpB,eAAU,GAAQ,EAAE;IACpB,eAAU,GAAQ,EAAE;IAGlB,IAAIM,KAAK,GAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,IAAIC,IAAI,GAAMF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC1C,IAAIE,KAAK,GAAMH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,IAAIG,IAAI,GAAKJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAII,IAAI,GAAKL,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEzC,IAAIF,KAAK,KAAK,IAAI,EAAE;MACpB,IAAIO,QAAQ,GAAQX,SAAS,CAACI,KAAK,CAAC;MACpCQ,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACnB,IAAI,CAACG,UAAU,GAACN,KAAK;MACrB,IAAI,CAACO,QAAQ,GAAGR,IAAI;MACpB,IAAI,CAACS,UAAU,GAACP,IAAI;MACpB,IAAI,CAACQ,UAAU,GAACP,IAAI;MACpBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAAC;;IAE9B,IAAI,CAACI,OAAO,CAACC,IAAI,CAACX,KAAK,CAAC;EAC1B;EAGAY,KAAK,CAACT,QAAY;IAChB,IAAIU,WAAW,GAAG,IAAItB,WAAW,CAAC;MAChC,QAAQ,EAAE,kBAAkB;MAC7B,cAAc,EAAE;KAChB,CAAC;IAED,OAAQ,IAAI,CAACI,UAAU,CAACmB,IAAI,CAAC,oDAAoD,EAAEX,QAAQ,CAAC;EAC/F;EAKFY,OAAO,CAACC,UAAc;IAEpB,IAAIH,WAAW,GAAG,IAAItB,WAAW,CAAC;MAChC,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,4CAA4C;MAC7D,iBAAiB,EAAE;KACpB,CAAC;IAEF,OAAO,IAAI,CAACI,UAAU,CAACmB,IAAI,CAAC,+CAA+C,EAAG;MAACG,OAAO,EAAGJ;IAAW,CAAC,EAAEG,UAAU,CAAE;EAGrH;;AArDavB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAyB,SAArBzB,qBAAqB;EAAA0B,YAFpB;AAAM","names":["BehaviorSubject","HttpHeaders","jwtDecode","AuthonticationService","constructor","_HttpClien","Token","localStorage","getItem","Data","Title","Link","Icon","userData","console","log","socialName","userName","socialLink","socialicon","isLogin","next","logIn","httpheaders","post","AddLink","clientdata","headers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Nourhan\\Desktop\\mashro3y.link\\my-app\\src\\app\\authontication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport{HttpHeaders} from '@angular/common/http';\nimport jwtDecode from 'jwt-decode';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthonticationService {\n  isLogin = new BehaviorSubject(null);\n   \n   \n  userName:string=\"\";\n  socialName:string=\"\";\n  socialLink:string=\"\";\n  socialicon:string=\"\";\n\n  constructor (private _HttpClien: HttpClient){\n    let Token:any = localStorage.getItem('Token');\n    let Data:any= localStorage.getItem('Data'); \n    let Title:any= localStorage.getItem('Title');\n    let Link:any=localStorage.getItem('Link');\n    let Icon:any=localStorage.getItem('Icon')\n \n    if (Token !== null) { \n    let userData: any = jwtDecode(Token);\n    console.log(userData)\n      this.socialName=Title;\n      this.userName = Data;\n      this.socialLink=Link;\n      this.socialicon=Icon;\n      console.log(this.socialName);\n    }\n    this.isLogin.next(Title);\n  }\n  \n\n  logIn(userData:any):Observable<any>{\n    let httpheaders = new HttpHeaders({\n      'Accept': 'application/json',\n     'Content-Type': 'application/json'\n    })\n   \n     return  this._HttpClien.post('https://mashro3ylink.com/api/v1/clients/auth/login', userData);\n  }\n\n\n\n\nAddLink(clientdata:any):Observable<any>{\n    \n  let httpheaders = new HttpHeaders({\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer${this._AuthonticationService.Token}',\n    'Accept-Language': '{{lang_code}}'\n  })\n\n  return this._HttpClien.post('https://mashro3ylink.com/api/v1/clients/links' , {headers : httpheaders}, clientdata )\n  \n\n}\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}