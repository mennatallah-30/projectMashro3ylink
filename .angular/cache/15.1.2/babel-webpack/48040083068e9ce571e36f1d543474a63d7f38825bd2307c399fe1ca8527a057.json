{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nlet DashboardComponent = class DashboardComponent {\n  sendClientData(form) {}\n  constructor(_ApiService, __AuthonticationService, _ActivatedRoute) {\n    this._ApiService = _ApiService;\n    this.__AuthonticationService = __AuthonticationService;\n    this._ActivatedRoute = _ActivatedRoute;\n    this.LinksForm = new FormGroup({\n      title: new FormControl(\"\", [Validators.required, Validators.minLength(3), Validators.maxLength(10)]),\n      link: new FormControl(\"\"),\n      order: new FormControl(\"\"),\n      icon: new FormControl(\"\"),\n      icon_image: new FormControl(\"\"),\n      background_color: new FormControl(\"\"),\n      text_color: new FormControl(\"\"),\n      active_type_icon: new FormControl(\"\"),\n      custom_css: new FormControl(\"\"),\n      button_id: new FormControl(\"\"),\n      is_active: new FormControl(\"\")\n    });\n  }\n  ngOnInit() {\n    this.__AuthonticationService.isLogin.subscribe({\n      next: newValue => {\n        this.userLogin = newValue;\n        console.log('susbsribe run');\n        this.userName = this.__AuthonticationService.userName;\n      }\n    });\n    this._ApiService.getOneLinkShow(this.userid).subscribe({\n      next: data => {\n        console.log(data);\n        this.userdetails = data;\n        console.log(\"noora\", this.userdetails.data.icon);\n        console.log(\"nos\", this.userdetails.data.title);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n};\n__decorate([ViewChild('fileInput')], DashboardComponent.prototype, \"fileInput\", void 0);\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAAwBA,SAAS,EAAUC,SAAS,QAAQ,eAAe;AAC3E,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAG5C,SAASC,UAAU,QAAQ,gBAAgB;AAWpC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EA8B7BC,cAAc,CAACC,IAAQ,GAOvB;EAWDC,YAAqBC,WAAsB,EAClCC,uBAA6C,EAC7CC,eAA+B;IAFnB,gBAAW,GAAXF,WAAW;IACvB,4BAAuB,GAAvBC,uBAAuB;IACvB,oBAAe,GAAfC,eAAe;IArCvB,cAAS,GAAG,IAAIT,SAAS,CAAC;MACxBU,KAAK,EAAC,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACS,QAAQ,EAAGT,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,EAAEV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACpGC,IAAI,EAAE,IAAIb,WAAW,CAAC,EAAE,CAAC;MACzBc,KAAK,EAAC,IAAId,WAAW,CAAC,EAAE,CAAC;MACzBe,IAAI,EAAC,IAAIf,WAAW,CAAC,EAAE,CAAC;MACxBgB,UAAU,EAAC,IAAIhB,WAAW,CAAC,EAAE,CAAC;MAC9BiB,gBAAgB,EAAC,IAAIjB,WAAW,CAAC,EAAE,CAAC;MACpCkB,UAAU,EAAC,IAAIlB,WAAW,CAAC,EAAE,CAAC;MAC9BmB,gBAAgB,EAAC,IAAInB,WAAW,CAAC,EAAE,CAAC;MACpCoB,UAAU,EAAC,IAAIpB,WAAW,CAAC,EAAE,CAAC;MAC9BqB,SAAS,EAAC,IAAIrB,WAAW,CAAC,EAAE,CAAC;MAC7BsB,SAAS,EAAC,IAAItB,WAAW,CAAC,EAAE;KAC7B,CAAC;EA8BH;EASAuB,QAAQ;IACP,IAAI,CAAChB,uBAAuB,CAACiB,OAAO,CAACC,SAAS,CAAC;MAC7CC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACC,SAAS,GAAGD,QAAQ;QACzBE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC5B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACxB,uBAAuB,CAACwB,QAAQ;MACvD;KAGD,CAAC;IAGF,IAAI,CAACzB,WAAW,CAAC0B,cAAc,CAAC,IAAI,CAACC,MAAM,CAAC,CAACR,SAAS,CAAC;MACrDC,IAAI,EAAGQ,IAAI,IAAI;QACbL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;QAGjB,IAAI,CAACC,WAAW,GAAGD,IAAI;QAEvBL,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACK,WAAW,CAACD,IAAI,CAACnB,IAAI,CAAC;QAChDc,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE,IAAI,CAACK,WAAW,CAACD,IAAI,CAACzB,KAAK,CAAC;MACjD,CAAC;MACD2B,KAAK,EAAGC,GAAG,IAAI;QACbR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;MAClB;KACD,CAAC;EAOH;CAMC;AAhGwBC,YAAvBxC,SAAS,CAAC,WAAW,CAAC,qDAAe;AAN3BI,kBAAkB,eAL9BL,SAAS,CAAC;EACT0C,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWvC,kBAAkB,CAsG7B;SAtGWA,kBAAkB","names":["Component","ViewChild","FormGroup","FormControl","Validators","DashboardComponent","sendClientData","form","constructor","_ApiService","__AuthonticationService","_ActivatedRoute","title","required","minLength","maxLength","link","order","icon","icon_image","background_color","text_color","active_type_icon","custom_css","button_id","is_active","ngOnInit","isLogin","subscribe","next","newValue","userLogin","console","log","userName","getOneLinkShow","userid","data","userdetails","error","err","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nourhan\\Desktop\\mashro3y.link\\my-app\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthonticationService } from '../authontication.service';\nimport jwtDecode from 'jwt-decode';\nimport { Token } from '@angular/compiler';\nimport { ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements  OnInit  {\n\n  userLogin: any;\n  userName: any;\n  title:any;\n\n  @ViewChild('fileInput') fileInput:any;\n  \n\n \n  \n\n\n  LinksForm = new FormGroup({\n    title:new FormControl(\"\" ,[Validators.required , Validators.minLength(3), Validators.maxLength(10)]),\n    link: new FormControl(\"\"),\n    order:new FormControl(\"\"),\n    icon:new FormControl(\"\"),\n    icon_image:new FormControl(\"\"),\n    background_color:new FormControl(\"\"),\n    text_color:new FormControl(\"\"),\n    active_type_icon:new FormControl(\"\"),\n    custom_css:new FormControl(\"\"),\n    button_id:new FormControl(\"\"),\n    is_active:new FormControl(\"\"),\n  });\n  \n  apiresponse:any;\nuserid:any;\nuserdetails:any;\n  sendClientData(form:any){\n    \n   \n\n  \n \n    \n  };\n\n\n   \n\n\n  \n  \n  \n \n\n constructor(private  _ApiService:ApiService ,\n  private __AuthonticationService:AuthonticationService,\n  private _ActivatedRoute: ActivatedRoute,\n  \n  ){\n  \n\n }\n\n \n\n\n     \n\n\n\n ngOnInit(): void {\n  this.__AuthonticationService.isLogin.subscribe({\n    next: (newValue) => {\n      this.userLogin = newValue;\n      console.log('susbsribe run');\n      this.userName = this.__AuthonticationService.userName;\n    },\n\n    \n  });\n\n  \n  this._ApiService.getOneLinkShow(this.userid).subscribe({\n    next: (data) => {\n      console.log(data);\n      \n\n      this.userdetails = data;\n      \n      console.log(\"noora\" ,this.userdetails.data.icon);\n      console.log(\"nos\" ,this.userdetails.data.title);\n    },\n    error: (err) => {\n      console.log(err);\n    },\n  });\n  \n \n  \n \n\n   \n }\n\n \n \n  \n\n }\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}