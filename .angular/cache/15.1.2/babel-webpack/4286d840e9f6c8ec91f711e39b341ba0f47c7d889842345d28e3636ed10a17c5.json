{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomeDetailsComponent = class HomeDetailsComponent {\n  constructor(_MyserviceService, activatedRoute, router) {\n    this._MyserviceService = _MyserviceService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.PROFILE = undefined;\n    this.HomeConStyle = {\n      // 'background-color':'red'\n    };\n    this.LOGOIMAGE = {\n      mylogo: \"assets/LOGO.png\"\n    };\n  }\n  ngOnInit() {\n    this.Username = this.activatedRoute.snapshot.params['username'];\n    this._MyserviceService.getINFO(this.Username).subscribe({\n      next: res => {\n        //  console.log(res)\n        if (!res?.success) {\n          this.statusMessage = res.message;\n        } else {\n          this.PROFILE = res.data;\n          console.log(this.PROFILE);\n          this.SetHomeContainerBackground();\n        }\n      }\n    });\n    this.href = this.router.url;\n    console.log(this.href);\n  }\n  SetHomeContainerBackground() {\n    if (this.PROFILE.active_profile_background == 'image') {\n      this.HomeConStyle[\"background-image\"] = `url(${this.PROFILE.profile_background_image})`;\n    } else if (this.PROFILE.active_profile_background == 'color') {\n      this.HomeConStyle = {\n        \"background-color\": this.PROFILE.profile_background_color\n      };\n    }\n  }\n  shareButton() {\n    if (navigator.share) {\n      navigator.share({\n        url: 'this.href'\n      }).then(() => {\n        console.log(\"success\");\n      }).catch(e => {\n        console.log(e, \"faild\");\n      });\n    } else {\n      console.log(\"Not Supported\");\n    }\n  }\n};\nHomeDetailsComponent = __decorate([Component({\n  selector: 'app-home-details',\n  templateUrl: './home-details.component.html',\n  styleUrls: ['./home-details.component.css']\n})], HomeDetailsComponent);\nexport { HomeDetailsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAU/BC,YAAoBC,iBAA6B,EACvCC,cAA8B,EAC9BC,MAAc;IAFJ,sBAAiB,GAAjBF,iBAAiB;IAC3B,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IAXhB,YAAO,GAAQC,SAAS;IAGxB,iBAAY,GAAK;MACf;IAAA,CACD;IAQC,cAAS,GAAC;MACRC,MAAM,EAAC;KACR;EAJ0B;EAM7BC,QAAQ;IAEN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACL,cAAc,CAACM,QAAQ,CAACC,MAAM,CAAC,UAAU,CAAC;IAE/D,IAAI,CAACR,iBAAiB,CAACS,OAAO,CAAC,IAAI,CAACH,QAAQ,CAAC,CAACI,SAAS,CAAC;MACtDC,IAAI,EAAGC,GAAQ,IAAI;QACjB;QACA,IAAI,CAACA,GAAG,EAAEC,OAAO,EAAE;UACjB,IAAI,CAACC,aAAa,GAAGF,GAAG,CAACG,OAAO;SACjC,MACI;UACH,IAAI,CAACC,OAAO,GAAGJ,GAAG,CAACK,IAAI;UACvBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;UACzB,IAAI,CAACI,0BAA0B,EAAE;;MAGrC;KACD,CAAC;IAGF,IAAI,CAACC,IAAI,GAAG,IAAI,CAACnB,MAAM,CAACoB,GAAG;IAC3BJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,IAAI,CAAC;EAExB;EAEAD,0BAA0B;IACxB,IAAI,IAAI,CAACJ,OAAO,CAACO,yBAAyB,IAAI,OAAO,EAAE;MACvD,IAAI,CAACC,YAAY,CAAC,kBAAkB,CAAC,GAAC,OAAO,IAAI,CAACR,OAAO,CAACS,wBAAyB,GAAG;KACrF,MACI,IAAI,IAAI,CAACT,OAAO,CAACO,yBAAyB,IAAI,OAAO,EAAE;MAC3D,IAAI,CAACC,YAAY,GAAC;QAAC,kBAAkB,EAAC,IAAI,CAACR,OAAO,CAACU;MAAwB,CAAC;;EAG/E;EAGAC,WAAW;IAET,IAAIC,SAAS,CAACC,KAAK,EAAE;MACnBD,SAAS,CACNC,KAAK,CAAC;QACLP,GAAG,EAAE;OACN,CAAC,CACDQ,IAAI,CAAC,MAAK;QACTZ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACxB,CAAC,CAAC,CACDY,KAAK,CAAEC,CAAC,IAAI;QACXd,OAAO,CAACC,GAAG,CAACa,CAAC,EAAE,OAAO,CAAC;MACzB,CAAC,CAAC;KACL,MAAM;MACLd,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;;EAEhC;CAID;AA1EYrB,oBAAoB,eALhCD,SAAS,CAAC;EACToC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACWrC,oBAAoB,CA0EhC;SA1EYA,oBAAoB","names":["Component","HomeDetailsComponent","constructor","_MyserviceService","activatedRoute","router","undefined","mylogo","ngOnInit","Username","snapshot","params","getINFO","subscribe","next","res","success","statusMessage","message","PROFILE","data","console","log","SetHomeContainerBackground","href","url","active_profile_background","HomeConStyle","profile_background_image","profile_background_color","shareButton","navigator","share","then","catch","e","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\my-app\\src\\app\\home-details\\home-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from \"../../api.service\";\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-home-details',\n  templateUrl: './home-details.component.html',\n  styleUrls: ['./home-details.component.css']\n})\nexport class HomeDetailsComponent {\n  PROFILE: any = undefined;\n  statusMessage: string ;\n  Username: string ;\n  HomeConStyle:any={\n    // 'background-color':'red'\n  }\n\n  public href: string ;\n    url: string ;\n  constructor(private _MyserviceService: ApiService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) {  }\n\n    LOGOIMAGE={\n      mylogo:\"assets/LOGO.png\"\n    }\n\n  ngOnInit(): void {\n\n    this.Username = this.activatedRoute.snapshot.params['username'];\n    \n    this._MyserviceService.getINFO(this.Username).subscribe({\n      next: (res: any) => {\n        //  console.log(res)\n        if (!res?.success) {\n          this.statusMessage = res.message;\n        }\n        else {\n          this.PROFILE = res.data;\n          console.log(this.PROFILE)\n          this.SetHomeContainerBackground()\n\n        }\n      }\n    })\n\n\n    this.href = this.router.url;\n    console.log(this.href);\n\n  }\n\n  SetHomeContainerBackground() {\n    if (this.PROFILE.active_profile_background == 'image') {\n    this.HomeConStyle[\"background-image\"]=`url(${this.PROFILE.profile_background_image })`;\n    }\n    else if (this.PROFILE.active_profile_background == 'color') {\n     this.HomeConStyle={\"background-color\":this.PROFILE.profile_background_color};\n    }\n\n  }\n\n\n  shareButton() {\n\n    if (navigator.share) {\n      navigator\n        .share({\n          url: 'this.href',\n        })\n        .then(() => {\n          console.log(\"success\");\n        })\n        .catch((e) => {\n          console.log(e, \"faild\");\n        });\n    } else {\n      console.log(\"Not Supported\");\n    }\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}