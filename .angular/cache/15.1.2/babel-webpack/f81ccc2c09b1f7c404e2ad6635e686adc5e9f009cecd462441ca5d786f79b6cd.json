{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport jwtDecode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthonticationService {\n  constructor(_HttpClien) {\n    this._HttpClien = _HttpClien;\n    this.isLogin = new BehaviorSubject(null);\n    this.userName = \"\";\n    this.Token = localStorage.getItem('Token');\n    this.Data = localStorage.getItem('Data');\n    if (this.Token !== null) {\n      let userData = jwtDecode(this.Token);\n      console.log(userData);\n      this.userName = this.Data;\n    }\n    this.isLogin.next(this.Token);\n  }\n  logIn(userData) {\n    let httpheaders = new HttpHeaders({\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    });\n    return this._HttpClien.post('https://mashro3ylink.com/api/v1/clients/auth/login', userData);\n  }\n}\nAuthonticationService.ɵfac = function AuthonticationService_Factory(t) {\n  return new (t || AuthonticationService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthonticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthonticationService,\n  factory: AuthonticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAQ,MAAM;AACtC,SAAOC,WAAW,QAAO,sBAAsB;AAC/C,OAAOC,SAAS,MAAM,YAAY;;;AAMlC,OAAM,MAAOC,qBAAqB;EAShCC,YAAqBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAR/B,YAAO,GAAG,IAAIL,eAAe,CAAC,IAAI,CAAC;IAGnC,aAAQ,GAAQ,EAAE;IAMf,IAAI,CAACM,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACC,IAAI,GAAEF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAGvC,IAAI,IAAI,CAACF,KAAK,KAAK,IAAI,EAAE;MACzB,IAAII,QAAQ,GAAQR,SAAS,CAAC,IAAI,CAACI,KAAK,CAAC;MAEzCK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MAGnB,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACJ,IAAI;;IAG3B,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,IAAI,CAACT,KAAK,CAAC;EAC/B;EAGAU,KAAK,CAACN,QAAY;IAChB,IAAIO,WAAW,GAAG,IAAIhB,WAAW,CAAC;MAChC,QAAQ,EAAE,kBAAkB;MAC7B,cAAc,EAAE;KAChB,CAAC;IAED,OAAQ,IAAI,CAACI,UAAU,CAACa,IAAI,CAAC,oDAAoD,EAAER,QAAQ,CAAC;EAC/F;;AAlCWP,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;SAArBA,qBAAqB;EAAAgB,SAArBhB,qBAAqB;EAAAiB,YAFpB;AAAM","names":["BehaviorSubject","HttpHeaders","jwtDecode","AuthonticationService","constructor","_HttpClien","Token","localStorage","getItem","Data","userData","console","log","userName","isLogin","next","logIn","httpheaders","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Nourhan\\Desktop\\mashro3y.link\\my-app\\src\\app\\authontication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\nimport{HttpHeaders} from '@angular/common/http';\nimport jwtDecode from 'jwt-decode';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthonticationService {\n  isLogin = new BehaviorSubject(null);\n   \n   \n  userName:string=\"\";\n  Token:any;\n  data2:any;\n  Data:any;\n\n  constructor (private _HttpClien: HttpClient){\n     this.Token = localStorage.getItem('Token');\n    this.Data= localStorage.getItem('Data'); \n    \n  \n    if (this.Token !== null) { \n    let userData: any = jwtDecode(this.Token);\n    \n    console.log(userData)\n   \n     \n      this.userName = this.Data;\n    \n    }\n    this.isLogin.next(this.Token);\n  }\n  \n\n  logIn(userData:any):Observable<any>{\n    let httpheaders = new HttpHeaders({\n      'Accept': 'application/json',\n     'Content-Type': 'application/json'\n    })\n   \n     return  this._HttpClien.post('https://mashro3ylink.com/api/v1/clients/auth/login', userData);\n  }\n\n  \n\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}