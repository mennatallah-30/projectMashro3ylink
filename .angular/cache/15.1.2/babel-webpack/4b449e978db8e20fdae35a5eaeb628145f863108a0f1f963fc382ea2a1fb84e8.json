{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nlet DashboardComponent = class DashboardComponent {\n  getFile(event) {\n    this.icon_image = event.target.files[0];\n  }\n  logout() {\n    this._ApiService.REMOVEDATA();\n    this._router.navigate(['/register']);\n  }\n  constructor(_ApiService, __AuthonticationService, _ActivatedRoute, fb, _router) {\n    this._ApiService = _ApiService;\n    this.__AuthonticationService = __AuthonticationService;\n    this._ActivatedRoute = _ActivatedRoute;\n    this.fb = fb;\n    this._router = _router;\n    this.fileInput = \"\";\n    this.imgpath = '/home/mashro3ylink/public_html/app/Http/Controllers/API/Client/LinkAPIController.php';\n    this.LinksForm = new FormGroup({\n      title: new FormControl(\"\"),\n      link: new FormControl(\"\"),\n      order: new FormControl(\"1\"),\n      icon: new FormControl(\"fa fa -facebook\"),\n      icon_image: new FormControl(\"\"),\n      background_color: new FormControl(\"#ffddee\"),\n      text_color: new FormControl(\"\"),\n      active_type_icon: new FormControl(\"icon\"),\n      custom_css: new FormControl(\"\"),\n      button_id: new FormControl(\"\"),\n      is_active: new FormControl(\"1\")\n    });\n  }\n  clickbutton(x) {\n    this._ApiService.getOneLinkShow(this.Userid);\n    this.Userid = x;\n    console.log(\"el-id\", this.Userid);\n  }\n  AddClientData(form) {\n    this._ApiService.AddLink(form.value).subscribe({\n      next: response => {\n        this.linkDetails = form.value;\n        console.log(\"addlink\", this.linkDetails);\n      }\n    });\n  }\n  sendClientData(form) {}\n  getdata() {\n    this._ApiService.getAllLinks().subscribe({\n      next: data => {\n        console.log(data);\n        this.userdetails = data;\n        this.linkDetails = data.data;\n        // console.log(\"noora\" ,this.linkDetails);\n      },\n\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  submitData(x) {\n    let formdata = new FormData();\n    formdata.set(\"icon_image\", this.icon_image);\n    this._ApiService.AddLink(formdata).subscribe({\n      next: response => {}\n    });\n  }\n  ngOnInit() {\n    this.__AuthonticationService.isLogin.subscribe({\n      next: newValue => {\n        this.userLogin = newValue;\n        console.log('susbsribe run');\n        this.userName = this.__AuthonticationService.userName;\n      }\n    });\n    this.getdata();\n  }\n};\n__decorate([ViewChild('fileInput')], DashboardComponent.prototype, \"fileInput\", void 0);\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","FormGroup","FormControl","DashboardComponent","getFile","event","icon_image","target","files","logout","_ApiService","REMOVEDATA","_router","navigate","constructor","__AuthonticationService","_ActivatedRoute","fb","title","link","order","icon","background_color","text_color","active_type_icon","custom_css","button_id","is_active","clickbutton","x","getOneLinkShow","Userid","console","log","AddClientData","form","AddLink","value","subscribe","next","response","linkDetails","sendClientData","getdata","getAllLinks","data","userdetails","error","err","submitData","formdata","FormData","set","ngOnInit","isLogin","newValue","userLogin","userName","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nourhan\\Desktop\\mashro3y.link\\my-app\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormControl } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthonticationService } from '../authontication.service';\nimport jwtDecode from 'jwt-decode';\nimport { Token } from '@angular/compiler';\nimport { ActivatedRoute } from '@angular/router';\nimport { from } from 'rxjs';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements  OnInit  {\n\nicon_image:any;\n\ngetFile(event:any){\nthis.icon_image = event.target.files[0];\n}\n  off:any;\n\n\n  \nlogout(){\n  this._ApiService.REMOVEDATA();\n  this._router.navigate(['/register'])\n\n}\n\n  constructor(private  _ApiService:ApiService ,\n    private __AuthonticationService:AuthonticationService,\n    private _ActivatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private _router:Router\n     ){\n     \n     \n    }\n\n  userLogin: any;\n  userName: any;\n  title:any;\n  \n  \n  \n  @ViewChild('fileInput') fileInput:string=\"\";\n \n\n \n  imgpath:string='/home/mashro3ylink/public_html/app/Http/Controllers/API/Client/LinkAPIController.php';\n\n\n  LinksForm = new FormGroup({\n    title:new FormControl(\"\"),\n    link: new FormControl(\"\"),\n    order:new FormControl(\"1\"),\n    icon:new FormControl(\"fa fa -facebook\"),\n    icon_image:new FormControl(\"\"),\n    background_color:new FormControl(\"#ffddee\"),\n    text_color:new FormControl(\"\"),\n    active_type_icon:new FormControl(\"icon\"),\n    custom_css:new FormControl(\"\"),\n    button_id:new FormControl(\"\"),\n    is_active:new FormControl(\"1\"),\n  });\n\n  \n  Res:any;\nuserid:any;\nuserdetails:any;\nvalue:any;\nlinkDetails:any;\nUserid:any;\n\n\n\n\n\n  clickbutton(x:any){\n    this._ApiService.getOneLinkShow(this.Userid)\n      this.Userid=x;\n       \n        \n        \n        \n      console.log(\"el-id\" ,this.Userid);\n    \n  \n  \n\n  }\n \n\n   \n\n\n  \n  reso:any;\n  d:any;\n  \n\n  AddClientData(form:any){\n   \n    \n    this._ApiService.AddLink(form.value).subscribe({\n      next:(response:any)=>{\n      \n       \n        this.linkDetails=form.value;\n        \n        console.log(\"addlink\", this.linkDetails)\n      }\n    }) \n  }\n  \n\n\n  \n  sendClientData(form:any){\n    \n   \n\n\n  }\n\n\n  getdata(){\n\n    this._ApiService.getAllLinks().subscribe({\n    \n      \n      next: (data:any) => {\n        \n        console.log(data);\n       \n        \n  \n        this.userdetails = data\n        this.linkDetails=data.data\n        \n        \n        // console.log(\"noora\" ,this.linkDetails);\n        \n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n\n   \n   \n }\n\n \n\n \n\n\n    \n\n submitData(x:any){\n  let formdata= new FormData();\n  formdata.set(\"icon_image\", this.icon_image  )\n  this._ApiService.AddLink(formdata).subscribe({\n    next:(response)=>{\n      \n    }\n  })\n  }\n\n ngOnInit(): void {\n  this.__AuthonticationService.isLogin.subscribe({\n    next: (newValue) => {\n      this.userLogin = newValue;\n      console.log('susbsribe run');\n      this.userName = this.__AuthonticationService.userName;\n\n  \n    },\n\n    \n  });\n  this.getdata();\n\n }\n\n \n \n  \n\n }\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}